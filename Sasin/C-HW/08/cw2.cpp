#include <iostream>
#include <string>
#include <ctime>

using namespace std;

class Test
{

private:
	string* question = nullptr;
	int size;
public:
	Test()
	{
		size = 10;
		question = new string[size];
		question[0] = "На каком расстоянии из перечисленных от транспортного средства устанавливается знак аварийной остановки вне населенных пунктов? *1) От 10 до 15 метров.*2) От 15 до 40 метров.*3) Не менее 15 метров.*4) Не менее 40 метров.+*";
		question[1] = "Какой из вариантов ответа соответствует термину «перекресток»? *1) Пересечение дороги с велосипедной дорожко.*2) Пересечение дороги с пешеходной дорожко.*3) Пересечение дороги с дорожкой для всадников.*4) Выезд из жилой зоны.+*5) Все перечисленные соответствуют.*";
		question[2] = "В каком из перечисленных буксируемых транспортных средств запрещено перевозить пассажиров?*1) В легковом автомобиле.*2) В кабине грузового автомобиля с технически допустимой общей массой менее 3,5 тонны.+*3) На мотоцикле с боковым прицепом.*4) Запрещено во всех перечисленных случаях.*";
		question[3] = "Должностные лица каких из перечисленных органов имеют право остановки транспортных средств для осуществления возложенных на указанные органы функций ? *1) Внутренних дел.*2) Государственной инспекции охраны животного и растительного мира при Президенте Республики Беларусь.*3) Органов финансовых расследований Комитета государственного контроля.*4) Органов государственной безопасности.+*5) Все перечисленных.*+";
		question[4] = "Разрешается ли участие в дорожном движении прицепов, не прошедших государственного технического осмотра в установленном порядке? *1) Запрещается.+*2) Разрешается во всех случаях.*3) Разрешается только при их буксировке легковыми автомобилями.*4) Разрешается только в том случае, если автомобиль зарегистрирован на территории Республики Беларусь до 10 августа 2002 г.*";
		question[5] = "Кто из перечисленных лиц является пешеходом? *1) Непричастное к управлению транспортным средством физическое лицо, находящееся в транспортном средстве.*2) Физическое лицо, переходящее проезжую часть вне пешеходного перехода.+*3) Физическое лицо, перегоняющее через дорогу стадо животных в месте, обозначенном дорожным знаком «1.24 Перегон скота».*4) Физическое лицо, находящееся в пределах дороги вне транспортного средства и выполняющее на дороге ремонтные и другие работы.*5) Все перечисленные.*";
		question[6] = "В каком варианте ответа правильно указан способ оказания первой помощи при ушибе живота? *1) Обеспечить пострадавшему полный покой, а область ушиба охладить (лед, примочки с холодной водой).+*2. Растереть место ушиба жестким материалом, наложить повязку, дать обильное питье.*3. Массажировать область ушиба, а затем прогреть его (грелка, примочки с теплой водой).*";
		question[7] = "Какие действия из перечисленных запрещены пассажиру? *1. Отвлекать водителя от управления транспортным средством во время его движения.*2. Препятствовать закрытию дверей транспортного средства.*3. Во время движения транспортного средства высовываться в оконные проемы, открывать двери транспортного средства.*4. При движении на грузовом автомобиле с бортовой платформой стоять, сидеть на бортах или на грузе, находящемся выше уровня бортов.*5. Все перечисленны.+*";
		question[8] = "В каком из перечисленных случаев должна быть включена аварийная световая сигнализация ? *1. При буксировке (на буксирующем транспортном средстве).*2. На транспортном средстве, движущемся с техническими неисправностями, если движение не запрещено Правилами.+*3. При вынужденной остановке на расстоянии 20 метров от перекрестка на обочине.*";
		question[9] = "Кому из перечисленных лиц разрешено не пристегиваться ремнями безопасности ? *1. Водителю автомобиля-такси при движении вне населенных пунктов.*2. Пассажиру автомобиля-такси при движении в населенном пункте.*3. Лицу, обучающему управлению автомобилем, когда автомобилем управляет лицо, обучаемое управлению.+*4. Всем перечисленным лицам.*";

	}
	Test(string* test, int size)
	{
		this->size = size;
		this->question = new string[size];
		for (int i = 0; i < size; i++)
		{
			this->question[i] = test[i];
		}
	}
	Test(const string & test)
	{
		this->size = size;
		this->question = new string[size];
		for (int i = 0; i < size; i++)
		{
			this->question[i] = test[i];
		}
	}
	~Test()
	{
		delete[]question;
	}


	void print(int temp)
	{
		
		int j = 0;
		int sizeStr = this->question[temp].size();
		int n = 0;
		for (int i = 0; i < sizeStr; i++)
		{
			if (this->question[temp][i] == '*')
			{
				cout << question[temp].substr(j, n-1) << endl;
				j = i+1;
				n = 0;
			}
			n++;
		}
	}


};




void main()
{

	srand(time(NULL));
	setlocale(LC_ALL, "Rus");
	int masFT[10] = { 1,1,1,1,1,1,1,1,1,1 };
	int masСorrect_answer[10] = {4,4,2,5,1,2,1,5,2,3};
	int correct_answer = 0;
	int coutTest = 0;
	
	Test res;
	for (int i = 0; i < 5; i++)
	{
		tmp: int temp = rand() % 10;
		if (masFT[temp] == 0)
		{
			goto tmp;
		}
		else
		{
			masFT[temp] = 0;
		}
		res.print(temp);
		cout << endl;
		cout << "Введите правильный ответ: ";
		cin >> correct_answer;
		if (correct_answer == masСorrect_answer[temp])
		{
			cout << endl << "Верно!"<<endl;
			coutTest++;
		}
		else if (correct_answer != masСorrect_answer[temp])
		{
			cout << endl << "Не верно!" << endl;
		}
		system("pause");
		system("cls");
	}
	cout << "Тест пройден и ваш результат равен: " << coutTest << endl;
	


	system("pause");
	return;

}